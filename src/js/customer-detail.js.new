// Get customer ID from URL params
const urlParams = new URLSearchParams(window.location.search);
const customerId = urlParams.get('id');
const printMode = urlParams.get('print') === 'true';

// DOM elements for displaying customer data
const elements = {
    codeNumber: document.getElementById('view-codeNumber'),
    orderDate: document.getElementById('view-orderDate'),
    name: document.getElementById('view-name'),
    returnDate: document.getElementById('view-returnDate'),
    cellNumber: document.getElementById('view-cellNumber'),
    address: document.getElementById('view-address'),
    cuttingNo: document.getElementById('view-cuttingNo'),
    age: document.getElementById('view-age'),
    quantity: document.getElementById('view-quantity'),
    enteredBy: document.getElementById('view-enteredBy'),

    // Measurements
    shalwar_lambai: document.getElementById('view-shalwar_lambai'),
    shalwar_type: document.getElementById('view-shalwar_type'),
    lambai: document.getElementById('view-lambai'),
    shalwar: document.getElementById('view-shalwar'),
    pacha: document.getElementById('view-pacha'),
    asteen: document.getElementById('view-asteen'),
    tera: document.getElementById('view-tera'),
    lib: document.getElementById('view-lib'),
    ander: document.getElementById('view-ander'),
    collar_type: document.getElementById('view-collar_type'),
    collar_style: document.getElementById('view-collar_style'),
    shalwar_pocket: document.getElementById('view-shalwar_pocket'),
    chati: document.getElementById('view-chati'),
    kamar: document.getElementById('view-kamar'),
    gira: document.getElementById('view-gira'),
    moza: document.getElementById('view-moza'),
};

// Button event listeners
document.getElementById('back-btn').addEventListener('click', () => {
    window.history.back();
});

document.getElementById('print-btn').addEventListener('click', () => {
    try {
        generatePDF();
    } catch (error) {
        console.error('PDF generation failed, falling back to browser print:', error);
        window.print();
    }
});

// Load customer data when the page loads
document.addEventListener('DOMContentLoaded', () => {
    if (!customerId) {
        alert('Customer ID not provided');
        window.history.back();
        return;
    }

    // Request customer data from main process
    window.api.send('get-customer', { id: customerId });
});

// Handle customer data response
window.api.receive('get-customer-response', (response) => {
    if (response.success) {
        displayCustomerData(response.customer);
        
        // Automatically print if in print mode
        if (printMode) {
            setTimeout(() => {
                try {
                    generatePDF();
                } catch (error) {
                    console.error('PDF generation failed, falling back to browser print:', error);
                    window.print();
                }
                
                // Go back to previous page after print dialog is closed
                setTimeout(() => {
                    window.history.back();
                }, 1000);
            }, 1000);
        }
    } else {
        alert('Failed to load customer data');
        console.error('Error:', response.error);
    }
});

// Display customer data in the view
function displayCustomerData(customer) {
    // Set document title
    document.title = `Customer: ${customer.name} - Noor & Sons Tailors`;

    // Display basic info
    elements.codeNumber.textContent = customer.codeNumber || '-';
    elements.orderDate.textContent = formatDate(customer.orderDate);
    elements.name.textContent = customer.name;
    elements.returnDate.textContent = formatDate(customer.returnDate);
    elements.cellNumber.textContent = customer.cellNumber || '-';
    elements.address.textContent = customer.address || '-';
    elements.cuttingNo.textContent = customer.cuttingNo || '-';
    elements.age.textContent = customer.age || '-';
    elements.quantity.textContent = customer.quantity || '-';
    elements.enteredBy.textContent = customer.enteredBy || '-';

    // Display measurements
    if (customer.measurements) {
        const m = customer.measurements;
        elements.shalwar_lambai.textContent = m.shalwar_lambai || '-';
        elements.shalwar_type.textContent = m.shalwar_type || '-';
        elements.lambai.textContent = m.lambai || '-';
        elements.shalwar.textContent = m.shalwar || '-';
        elements.pacha.textContent = m.pacha || '-';
        elements.asteen.textContent = m.asteen || '-';
        elements.tera.textContent = m.tera || '-';
        elements.lib.textContent = m.lib || '-';
        elements.ander.textContent = m.ander || '-';
        elements.collar_type.textContent = m.collar_type || '-';

        // Display collar/ben style based on type
        if (m.collar_type === 'کالر') {
            elements.collar_style.textContent = m.collar_style || '-';
        } else if (m.collar_type === 'بین') {
            elements.collar_style.textContent = m.ben_style || '-';
        } else {
            elements.collar_style.textContent = '-';
        }

        elements.shalwar_pocket.textContent = m.shalwar_pocket || '-';
        elements.chati.textContent = m.chati || '-';
        elements.kamar.textContent = m.kamar || '-';
        elements.gira.textContent = m.gira || '-';
        elements.moza.textContent = m.moza || '-';
    }
}

// Helper function to format date
function formatDate(dateString) {
    if (!dateString) return '-';

    const date = new Date(dateString);
    return date.toLocaleDateString();
}

// Function to generate PDF from customer details
function generatePDF() {
    try {
        const { jsPDF } = window.jspdf;
        if (!jsPDF) {
            console.error('jsPDF is not available');
            alert('PDF generation library not loaded. Please try again.');
            return;
        }

        const customer = {
            name: elements.name.textContent,
            codeNumber: elements.codeNumber.textContent,
            orderDate: elements.orderDate.textContent,
            returnDate: elements.returnDate.textContent,
            cellNumber: elements.cellNumber.textContent,
            address: elements.address.textContent
        };
        
        // Create a new PDF
        const doc = new jsPDF('p', 'mm', 'a4');
        
        // Add header
        doc.setFontSize(20);
        doc.text('Noor & Sons Tailors And Fabrics', 105, 15, { align: 'center' });
        doc.setFontSize(12);
        doc.text('We offer you stitching of your choice', 105, 22, { align: 'center' });
        
        // Add customer information
        doc.setFontSize(14);
        doc.text('Customer Details', 15, 35);
        
        doc.setFontSize(11);
        doc.text(`Name: ${customer.name}`, 15, 45);
        doc.text(`Code Number: ${customer.codeNumber}`, 15, 52);
        doc.text(`Cell Number: ${customer.cellNumber}`, 15, 59);
        
        doc.text(`Order Date: ${customer.orderDate}`, 120, 45);
        doc.text(`Return Date: ${customer.returnDate}`, 120, 52);
        doc.text(`Address: ${customer.address}`, 120, 59);
        
        // Add measurements heading
        doc.setFontSize(14);
        doc.text('Measurements / ناپ', 15, 75);
        
        // Add measurements table
        // Create array for table with both Urdu and English labels
        const measurementRows = [
            ['Shalwar Length / شلوار لمبائی', elements.shalwar_lambai.textContent, 'Length / لمبائی', elements.lambai.textContent],
            ['Shalwar / شلوار', elements.shalwar.textContent, 'Pacha / پاچہ', elements.pacha.textContent],
            ['Sleeve / آستین', elements.asteen.textContent, 'Tera / تیرا', elements.tera.textContent],
            ['Lib / لیب', elements.lib.textContent, 'Ander / اندر', elements.ander.textContent],
            ['Collar Type / بین - کالر', elements.collar_type.textContent, 'Style / اسٹائل', elements.collar_style.textContent],
            ['Shalwar Pocket / شلوار پاکٹ', elements.shalwar_pocket.textContent, 'Chest / چھاتی', elements.chati.textContent],
            ['Waist / کمر', elements.kamar.textContent, 'Gira / گیرہ', elements.gira.textContent],
            ['Moza / موزہ', elements.moza.textContent, 'Shalwar Type / قسم', elements.shalwar_type?.textContent || '-']
        ];
        
        doc.autoTable({
            startY: 80,
            head: [['Measurement', 'Value', 'Measurement', 'Value']],
            body: measurementRows,
            theme: 'grid',
            styles: { fontSize: 10, cellPadding: 3 },
            headStyles: { fillColor: [41, 128, 185], textColor: 255 },
            alternateRowStyles: { fillColor: [240, 240, 240] }
        });
        
        // Add signature lines
        const finalY = doc.lastAutoTable.finalY + 20;
        
        doc.text('Customer Signature: ___________________', 15, finalY);
        doc.text('Tailor Signature: ___________________', 120, finalY);
        
        // Footer
        doc.setFontSize(10);
        doc.text('Thank you for choosing Noor & Sons Tailors And Fabrics.', 105, 280, { align: 'center' });
        
        // Save PDF with customer name
        const fileName = `Customer_${customer.name.replace(/\s+/g, '_')}_${customer.codeNumber}.pdf`;
        
        // Open PDF in new window and print
        doc.output('dataurlnewwindow', { filename: fileName });
    } catch (error) {
        console.error('Error in PDF generation:', error);
        alert('Unable to generate PDF. Falling back to browser print.');
        window.print();
    }
}
